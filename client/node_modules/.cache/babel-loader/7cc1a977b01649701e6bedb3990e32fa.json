{"ast":null,"code":"import _defineProperty from \"/home/skyraider/Projects/React/trenders/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable no-unused-expressions */\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  // console.log(cartItems, cartItems.length);\n  // if (cartItems.length) {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id); //eslint disable nextline;\n\n  if (existingCartItem) {\n    cartItems.map(cartItem => console.log(\"after if\", cartItem));\n    const result = cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity + 1\n    }) : cartItem);\n    console.log(result);\n    return result;\n  }\n\n  return [...cartItems, _objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })];\n};\nexport const removeItemFromCart = (cartItems, id) => {\n  console.log('id of item', id);\n  console.log('item', cartItems);\n\n  for (let i = 0; i < cartItems.length; i++) {\n    const element = cartItems[i];\n\n    if (element.id === id) {\n      console.log(...cartItems);\n      return cartItems.slice(0, i) + cartItems.slice(i);\n      break;\n    }\n  } // return result\n\n};","map":{"version":3,"sources":["/home/skyraider/Projects/React/trenders/src/redux/cart/cart.util.jsx"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","console","log","result","quantity","removeItemFromCart","i","length","element","slice"],"mappings":";;;;;;AAAA;AACA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACzD;AACA;AACA,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACvBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADnB,CAAzB,CAHyD,CAMzD;;AACA,MAAIH,gBAAJ,EAAsB;AACpBF,IAAAA,SAAS,CAACM,GAAV,CAAcF,QAAQ,IAAIG,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,QAAxB,CAA1B;AACA,UAAMK,MAAM,GAAGT,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACnCA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,qBACSD,QADT;AACmBM,MAAAA,QAAQ,EAAEN,QAAQ,CAACM,QAAT,GAAoB;AADjD,SAEIN,QAHS,CAAf;AAKAG,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AAEA,WAAOA,MAAP;AACD;;AAED,SAAO,CAAC,GAAGT,SAAJ,oBAAoBC,aAApB;AAAmCS,IAAAA,QAAQ,EAAE;AAA7C,KAAP;AACD,CApBM;AAsBP,OAAO,MAAMC,kBAAkB,GAAG,CAACX,SAAD,EAAYK,EAAZ,KAAmB;AACnDE,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBH,EAAzB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBR,SAAnB;;AAEA,OAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,SAAS,CAACa,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,UAAME,OAAO,GAAGd,SAAS,CAACY,CAAD,CAAzB;;AACA,QAAGE,OAAO,CAACT,EAAR,KAAeA,EAAlB,EAAqB;AACrBE,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAGR,SAAf;AACA,aAAOA,SAAS,CAACe,KAAV,CAAgB,CAAhB,EAAmBH,CAAnB,IAAwBZ,SAAS,CAACe,KAAV,CAAgBH,CAAhB,CAA/B;AACE;AACD;AACF,GAXkD,CAYnD;;AACD,CAbM","sourcesContent":["/* eslint-disable no-unused-expressions */\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  // console.log(cartItems, cartItems.length);\n  // if (cartItems.length) {\n  const existingCartItem = cartItems.find(\n    cartItem => cartItem.id === cartItemToAdd.id\n  );\n  //eslint disable nextline;\n  if (existingCartItem) {\n    cartItems.map(cartItem => console.log(\"after if\", cartItem));\n    const result = cartItems.map(cartItem =>\n      cartItem.id === cartItemToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n    console.log(result);\n    \n    return result;\n  }\n\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n};\n\nexport const removeItemFromCart = (cartItems, id) => {\n  console.log('id of item',id);\n  console.log('item',cartItems);\n  \n  for (let i = 0; i < cartItems.length; i++) {\n    const element = cartItems[i];\n    if(element.id === id){\n    console.log(...cartItems);\n    return cartItems.slice(0, i) + cartItems.slice(i)\n      break\n    }\n  }\n  // return result\n}"]},"metadata":{},"sourceType":"module"}