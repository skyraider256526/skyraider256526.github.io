{"ast":null,"code":"import { takeEvery } from \"redux-saga/effects\";\nimport { firestore, convertColletionToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nimport ShopActionTypes from \"./shops.types\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired\");\n  collectionRef.get().then(snaphot => {\n    const collectionMap = convertColletionToMap(snaphot); // console.log(\"shop mount\", collectionMap);\n\n    dispatch(fetchCollectionsSuccess(collectionMap));\n    this.setState({\n      isLoading: false\n    });\n  }).catch(error => console.log(error));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/skyraider/Projects/React/trenders/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertColletionToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","get","then","snaphot","collectionMap","dispatch","setState","isLoading","catch","error","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,SACEC,SADF,EAEEC,qBAFF,QAGO,+BAHP;AAKA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,eAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACAC,EAAAA,aAAa,CACVC,GADH,GAEGC,IAFH,CAEQC,OAAO,IAAI;AACf,UAAMC,aAAa,GAAGX,qBAAqB,CAACU,OAAD,CAA3C,CADe,CAEf;;AACAE,IAAAA,QAAQ,CAACX,uBAAuB,CAACU,aAAD,CAAxB,CAAR;AACA,SAAKE,QAAL,CAAc;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAd;AACD,GAPH,EAQGC,KARH,CAQSC,KAAK,IAAIX,OAAO,CAACC,GAAR,CAAYU,KAAZ,CARlB;AASD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMnB,SAAS,CACbK,eAAe,CAACe,uBADH,EAEbd,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery } from \"redux-saga/effects\";\n\nimport {\n  firestore,\n  convertColletionToMap\n} from \"../../firebase/firebase.utils\";\n\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure\n} from \"./shop.actions\";\n\nimport ShopActionTypes from \"./shops.types\";\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired\");\n  collectionRef\n    .get()\n    .then(snaphot => {\n      const collectionMap = convertColletionToMap(snaphot);\n      // console.log(\"shop mount\", collectionMap);\n      dispatch(fetchCollectionsSuccess(collectionMap));\n      this.setState({ isLoading: false });\n    })\n    .catch(error => console.log(error));\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}