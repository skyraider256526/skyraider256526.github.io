{"ast":null,"code":"var _jsxFileName = \"/home/skyraider/Projects/React/trenders/src/components/cart-dropdown/cart-dropdown.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport CustomButton from \"../custom-button/custom-button\";\nimport { selectCartItems } from \"../../redux/cart/cart.selector\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.action\";\nimport CartItem from \"../cart-item/cart-item\";\nimport { CartDropDownContainer, CartItemsContainer, EmptyMessage } from \"./cart-dropdown.styles\";\nimport \"./cart-dropdown.scss\";\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => React.createElement(CartDropDownContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(CartItemsContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n})) : React.createElement(EmptyMessage, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, \"Your cart is empty\")), React.createElement(CustomButton, {\n  onClick: () => {\n    history.push(\"/checkout\");\n    dispatch(toggleCartHidden());\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = state => ({\n  cartItems: selectCartItems(state)\n});\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/home/skyraider/Projects/React/trenders/src/components/cart-dropdown/cart-dropdown.jsx"],"names":["React","connect","withRouter","CustomButton","selectCartItems","toggleCartHidden","CartItem","CartDropDownContainer","CartItemsContainer","EmptyMessage","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,SACEC,qBADF,EAEEC,kBAFF,EAGEC,YAHF,QAIO,wBAJP;AAMA,OAAO,sBAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KACnB,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,SAAS,CAACG,MAAV,GACCH,SAAS,CAACI,GAAV,CAAcC,QAAQ,IACpB,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADD,GAKC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,CADF,EAUE,oBAAC,YAAD;AACE,EAAA,OAAO,EAAE,MAAM;AACbJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,IAAAA,QAAQ,CAACR,gBAAgB,EAAjB,CAAR;AACD,GAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,CADF;;AAsBA,MAAMc,eAAe,GAAGC,KAAK,KAAK;AAChCT,EAAAA,SAAS,EAAEP,eAAe,CAACgB,KAAD;AADM,CAAL,CAA7B;;AAIA,eAAelB,UAAU,CAACD,OAAO,CAACkB,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport { withRouter } from \"react-router-dom\";\n\nimport CustomButton from \"../custom-button/custom-button\";\n\nimport { selectCartItems } from \"../../redux/cart/cart.selector\";\n\nimport { toggleCartHidden } from \"../../redux/cart/cart.action\";\n\nimport CartItem from \"../cart-item/cart-item\";\n\nimport {\n  CartDropDownContainer,\n  CartItemsContainer,\n  EmptyMessage\n} from \"./cart-dropdown.styles\";\n\nimport \"./cart-dropdown.scss\";\n\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\n  <CartDropDownContainer>\n    <CartItemsContainer>\n      {cartItems.length ? (\n        cartItems.map(cartItem => (\n          <CartItem key={cartItem.id} item={cartItem} />\n        ))\n      ) : (\n        <EmptyMessage>Your cart is empty</EmptyMessage>\n      )}\n    </CartItemsContainer>\n    <CustomButton\n      onClick={() => {\n        history.push(\"/checkout\");\n        dispatch(toggleCartHidden());\n      }}\n    >\n      GO TO CHECKOUT\n    </CustomButton>\n  </CartDropDownContainer>\n);\n\nconst mapStateToProps = state => ({\n  cartItems: selectCartItems(state)\n});\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n"]},"metadata":{},"sourceType":"module"}