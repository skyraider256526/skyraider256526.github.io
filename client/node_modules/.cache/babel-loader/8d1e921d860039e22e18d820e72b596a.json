{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector(selectCart, selectCart => selectCart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumilatedQuantity, cartItem) => accumilatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumilatedQuantity, cartItem) => accumilatedQuantity + cartItem.price * cartItem.quantity, 0));","map":{"version":3,"sources":["/home/skyraider/Projects/React/trenders/src/redux/cart/cart.selector.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumilatedQuantity","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,SAF8B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC5CC,UAD4C,EAE5CA,UAAU,IAAIA,UAAU,CAACM,MAFmB,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAChD,CAACI,eAAD,CADgD,EAEhDC,SAAS,IACPA,SAAS,CAACI,MAAV,CACE,CAACC,mBAAD,EAAsBC,QAAtB,KACED,mBAAmB,GAAGC,QAAQ,CAACC,QAFnC,EAGE,CAHF,CAH8C,CAA3C;AAUP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CAC3C,CAACI,eAAD,CAD2C,EAE3CC,SAAS,IACPA,SAAS,CAACI,MAAV,CACE,CAACC,mBAAD,EAAsBC,QAAtB,KACED,mBAAmB,GAAGC,QAAQ,CAACG,KAAT,GAAiBH,QAAQ,CAACC,QAFpD,EAGE,CAHF,CAHyC,CAAtC","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  cart => cart.cartItems\n);\n\nexport const selectCartHidden = createSelector(\n  selectCart,\n  selectCart => selectCart.hidden\n);\n\nexport const selectCartItemsCount = createSelector(\n  [selectCartItems],\n  cartItems =>\n    cartItems.reduce(\n      (accumilatedQuantity, cartItem) =>\n        accumilatedQuantity + cartItem.quantity,\n      0\n    )\n);\n\nexport const selectCartTotal = createSelector(\n  [selectCartItems],\n  cartItems =>\n    cartItems.reduce(\n      (accumilatedQuantity, cartItem) =>\n        accumilatedQuantity + cartItem.price * cartItem.quantity,\n      0\n    )\n);\n"]},"metadata":{},"sourceType":"module"}