{"ast":null,"code":"var _jsxFileName = \"/home/skyraider/Projects/React/trenders/src/pages/shoppage/shop.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport CollectionPage from \"../collection/collection.page\";\nimport CollectionsOverview from \"../../components/collection-overview/collection-overview\";\nimport { firestore, convertColletionToMap } from \"../../firebase/firebase.utils\";\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnap = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections; // console.log(updateCollections, \"updateCollections\");\n\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async snaphot => {\n      const collectionMap = convertColletionToMap(snaphot); // console.log(\"shop mount\", collectionMap);\n\n      updateCollections(collectionMap);\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchStateToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch({\n    type: \"UPDATE_COLLECTIONS\",\n    payload: collectionMap\n  })\n});\n\nexport default connect(null, mapDispatchStateToProps)(ShopPage);","map":{"version":3,"sources":["/home/skyraider/Projects/React/trenders/src/pages/shoppage/shop.jsx"],"names":["React","Route","connect","updateCollections","CollectionPage","CollectionsOverview","firestore","convertColletionToMap","ShopPage","Component","unsubscribeFromSnap","componentDidMount","props","collectionRef","collection","onSnapshot","snaphot","collectionMap","render","match","path","mapDispatchStateToProps","dispatch","type","payload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,OAAOC,mBAAP,MAAgC,0DAAhC;AAEA,SACEC,SADF,EAEEC,qBAFF,QAGO,+BAHP;;AAKA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,mBADqC,GACf,IADe;AAAA;;AAGrCC,EAAAA,iBAAiB,GAAG;AAAA,UACVR,iBADU,GACY,KAAKS,KADjB,CACVT,iBADU,EAElB;;AACA,UAAMU,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,OAAN,IAAiB;AACxC,YAAMC,aAAa,GAAGV,qBAAqB,CAACS,OAAD,CAA3C,CADwC,CAExC;;AAEAb,MAAAA,iBAAiB,CAACc,aAAD,CAAjB;AACD,KALD;AAMD;;AACDC,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKP,KADhB,CACCO,KADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAEf,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKc,KAAK,CAACC,IAAX,mBADN;AAEE,MAAA,SAAS,EAAEhB,cAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASD;;AAzBoC;;AA4BvC,MAAMiB,uBAAuB,GAAGC,QAAQ,KAAK;AAC3CnB,EAAAA,iBAAiB,EAAEc,aAAa,IAC9BK,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE,oBAAR;AAA8BC,IAAAA,OAAO,EAAEP;AAAvC,GAAD;AAFiC,CAAL,CAAxC;;AAKA,eAAef,OAAO,CACpB,IADoB,EAEpBmB,uBAFoB,CAAP,CAGbb,QAHa,CAAf","sourcesContent":["import React from \"react\";\n\nimport { Route } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\n\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\n\nimport CollectionPage from \"../collection/collection.page\";\n\nimport CollectionsOverview from \"../../components/collection-overview/collection-overview\";\n\nimport {\n  firestore,\n  convertColletionToMap\n} from \"../../firebase/firebase.utils\";\n\nclass ShopPage extends React.Component {\n  unsubscribeFromSnap = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    // console.log(updateCollections, \"updateCollections\");\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async snaphot => {\n      const collectionMap = convertColletionToMap(snaphot);\n      // console.log(\"shop mount\", collectionMap);\n\n      updateCollections(collectionMap);\n    });\n  }\n  render() {\n    const { match } = this.props;\n    return (\n      <div className=\"shop\">\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPage}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchStateToProps = dispatch => ({\n  updateCollections: collectionMap =>\n    dispatch({ type: \"UPDATE_COLLECTIONS\", payload: collectionMap })\n});\n\nexport default connect(\n  null,\n  mapDispatchStateToProps\n)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}