{"ast":null,"code":"var _jsxFileName = \"/home/skyraider/Projects/React/trenders/src/pages/shoppage/shop.jsx\";\n// import React from \"react\";\n// import { Route } from \"react-router-dom\";\n// import { connect } from \"react-redux\";\n// import { createStructuredSelector } from \"reselect\";\n// import { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\n// import {\n//   selectIsCollectionFetching,\n//   selectIsCollectionLoading\n// } from \"../../redux/shop/shop.selector\";\n// import WithSpinner from \"../../components/with-spinner/with-spinner\";\n// import CollectionPage from \"../collection/collection.page\";\n// import CollectionsOverview from \"../../components/collection-overview/collection-overview\";\n// // import collectionOverview from \"../../components/collection-overview/collection-overview\";\n// // import collectionPage from \"../collection/collection.page\";\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n// class ShopPage extends React.Component {\n//   componentDidMount() {\n//     const { fetchCollectionsStartAsync } = this.props;\n//     fetchCollectionsStartAsync();\n//   }\n//   render() {\n//     const { match, isCollectionFetching, isCollectionLoading } = this.props;\n//     return (\n//       <div className=\"shop\">\n//         <Route\n//           exact\n//           path={`${match.path}`}\n//           render={props => (\n//             <CollectionsOverviewWithSpinner\n//               isLoading={isCollectionFetching}\n//               {...props}\n//             />\n//           )}\n//           // component={CollectionsOverview}\n//         />\n//         <Route\n//           path={`${match.path}/:collectionId`}\n//           render={props => (\n//             <CollectionPageWithSpinner\n//               isLoading={!isCollectionLoading}\n//               {...props}\n//             />\n//           )}\n//           // component={CollectionPage}\n//         />\n//       </div>\n//     );\n//   }\n// }\n// const mapStateToProps = () =>\n//   createStructuredSelector({\n//     isCollectionFetching: selectIsCollectionFetching,\n//     isCollectionLoading: selectIsCollectionLoading\n//   });\n// const mapDispatchStateToProps = dispatch => ({\n//   fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n// });\n// export default connect(mapStateToProps, mapDispatchStateToProps)(ShopPage);\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\nimport CollectionPageContainer from \"../collection/collection.container\";\nimport CollectionsOverviewContainer from \"../../components/collection-overview/collections-overview.container\";\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionsStart = this.props.fetchCollectionsStart;\n    fetchCollectionsStart();\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CollectionPageContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchStateToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchStateToProps)(ShopPage);","map":{"version":3,"sources":["/home/skyraider/Projects/React/trenders/src/pages/shoppage/shop.jsx"],"names":["React","Route","connect","fetchCollectionsStart","CollectionPageContainer","CollectionsOverviewContainer","ShopPage","Component","componentDidMount","props","render","match","path","mapDispatchStateToProps","dispatch"],"mappings":";AAAA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,qBAAT,QAAsC,+BAAtC;AAEA,OAAOC,uBAAP,MAAoC,oCAApC;AACA,OAAOC,4BAAP,MAAyC,qEAAzC;;AAEA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAAA,UACVL,qBADU,GACgB,KAAKM,KADrB,CACVN,qBADU;AAElBA,IAAAA,qBAAqB;AACtB;;AACDO,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKF,KADhB,CACCE,KADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAFN;AAGE,MAAA,SAAS,EAAEP,4BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKM,KAAK,CAACC,IAAX,mBADN;AAEE,MAAA,SAAS,EAAER,uBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAaD;;AApBoC;;AAuBvC,MAAMS,uBAAuB,GAAGC,QAAQ,KAAK;AAC3CX,EAAAA,qBAAqB,EAAE,MAAMW,QAAQ,CAACX,qBAAqB,EAAtB;AADM,CAAL,CAAxC;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOW,uBAAP,CAAP,CAAuCP,QAAvC,CAAf","sourcesContent":["// import React from \"react\";\n\n// import { Route } from \"react-router-dom\";\n\n// import { connect } from \"react-redux\";\n\n// import { createStructuredSelector } from \"reselect\";\n\n// import { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\n// import {\n//   selectIsCollectionFetching,\n//   selectIsCollectionLoading\n// } from \"../../redux/shop/shop.selector\";\n\n// import WithSpinner from \"../../components/with-spinner/with-spinner\";\n\n// import CollectionPage from \"../collection/collection.page\";\n// import CollectionsOverview from \"../../components/collection-overview/collection-overview\";\n// // import collectionOverview from \"../../components/collection-overview/collection-overview\";\n// // import collectionPage from \"../collection/collection.page\";\n\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n// class ShopPage extends React.Component {\n//   componentDidMount() {\n//     const { fetchCollectionsStartAsync } = this.props;\n//     fetchCollectionsStartAsync();\n//   }\n//   render() {\n//     const { match, isCollectionFetching, isCollectionLoading } = this.props;\n//     return (\n//       <div className=\"shop\">\n//         <Route\n//           exact\n//           path={`${match.path}`}\n//           render={props => (\n//             <CollectionsOverviewWithSpinner\n//               isLoading={isCollectionFetching}\n//               {...props}\n//             />\n//           )}\n//           // component={CollectionsOverview}\n//         />\n//         <Route\n//           path={`${match.path}/:collectionId`}\n//           render={props => (\n//             <CollectionPageWithSpinner\n//               isLoading={!isCollectionLoading}\n//               {...props}\n//             />\n//           )}\n//           // component={CollectionPage}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// const mapStateToProps = () =>\n//   createStructuredSelector({\n//     isCollectionFetching: selectIsCollectionFetching,\n//     isCollectionLoading: selectIsCollectionLoading\n//   });\n\n// const mapDispatchStateToProps = dispatch => ({\n//   fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n// });\n\n// export default connect(mapStateToProps, mapDispatchStateToProps)(ShopPage);\nimport React from \"react\";\n\nimport { Route } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\n\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\n\nimport CollectionPageContainer from \"../collection/collection.container\";\nimport CollectionsOverviewContainer from \"../../components/collection-overview/collections-overview.container\";\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const { fetchCollectionsStart } = this.props;\n    fetchCollectionsStart();\n  }\n  render() {\n    const { match } = this.props;\n    return (\n      <div className=\"shop\">\n        <Route\n          exact\n          path={`${match.path}`}\n          component={CollectionsOverviewContainer}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPageContainer}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchStateToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchStateToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}