{"ast":null,"code":"var _jsxFileName = \"/home/skyraider/Projects/React/trenders/src/pages/shoppage/shop.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { firestore, convertColletionToMap } from \"../../firebase/firebase.utils\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner\";\nimport CollectionPage from \"../collection/collection.page\";\nimport CollectionsOverview from \"../../components/collection-overview/collection-overview\"; // import collectionOverview from \"../../components/collection-overview/collection-overview\";\n// import collectionPage from \"../collection/collection.page\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true\n    };\n    this.unsubscribeFromSnap = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections; // console.log(updateCollections, \"updateCollections\");\n\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async snaphot => {\n      const collectionMap = convertColletionToMap(snaphot); // console.log(\"shop mount\", collectionMap);\n\n      updateCollections(collectionMap);\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const isLoading = this.state.isLoading;\n    return React.createElement(\"div\", {\n      className: \"shop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })) // component={CollectionsOverview}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })) // component={CollectionPage}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchStateToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch({\n    type: \"UPDATE_COLLECTIONS\",\n    payload: collectionMap\n  })\n});\n\nexport default connect(null, mapDispatchStateToProps)(ShopPage);","map":{"version":3,"sources":["/home/skyraider/Projects/React/trenders/src/pages/shoppage/shop.jsx"],"names":["React","Route","connect","firestore","convertColletionToMap","updateCollections","WithSpinner","CollectionPage","CollectionsOverview","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","isLoading","unsubscribeFromSnap","componentDidMount","props","collectionRef","collection","onSnapshot","snaphot","collectionMap","setState","render","match","path","mapDispatchStateToProps","dispatch","type","payload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SACEC,SADF,EAEEC,qBAFF,QAGO,+BAHP;AAKA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,4CAAxB;AAEA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,mBAAP,MAAgC,0DAAhC,C,CACA;AACA;;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACE,mBAAD,CAAlD;AACA,MAAME,yBAAyB,GAAGJ,WAAW,CAACC,cAAD,CAA7C;;AAEA,MAAMI,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,SAAS,EAAE;AADL,KAD6B;AAAA,SAIrCC,mBAJqC,GAIf,IAJe;AAAA;;AAMrCC,EAAAA,iBAAiB,GAAG;AAAA,UACVX,iBADU,GACY,KAAKY,KADjB,CACVZ,iBADU,EAElB;;AACA,UAAMa,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,OAAN,IAAiB;AACxC,YAAMC,aAAa,GAAGlB,qBAAqB,CAACiB,OAAD,CAA3C,CADwC,CAExC;;AACAhB,MAAAA,iBAAiB,CAACiB,aAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KALD;AAMD;;AACDU,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKR,KADhB,CACCQ,KADD;AAAA,UAECX,SAFD,GAEe,KAAKD,KAFpB,CAECC,SAFD;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAKW,KAAK,CAACC,IAAX,CAFN;AAGE,MAAA,MAAM,EAAET,KAAK,IACX,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAA0DG,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ,CAME;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKQ,KAAK,CAACC,IAAX,mBADN;AAEE,MAAA,MAAM,EAAET,KAAK,IACX,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAqDG,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ,CAKE;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAmBD;;AAvCoC;;AA0CvC,MAAMU,uBAAuB,GAAGC,QAAQ,KAAK;AAC3CvB,EAAAA,iBAAiB,EAAEiB,aAAa,IAC9BM,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE,oBAAR;AAA8BC,IAAAA,OAAO,EAAER;AAAvC,GAAD;AAFiC,CAAL,CAAxC;;AAKA,eAAepB,OAAO,CACpB,IADoB,EAEpByB,uBAFoB,CAAP,CAGbhB,QAHa,CAAf","sourcesContent":["import React from \"react\";\n\nimport { Route } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\n\nimport {\n  firestore,\n  convertColletionToMap\n} from \"../../firebase/firebase.utils\";\n\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner\";\n\nimport CollectionPage from \"../collection/collection.page\";\nimport CollectionsOverview from \"../../components/collection-overview/collection-overview\";\n// import collectionOverview from \"../../components/collection-overview/collection-overview\";\n// import collectionPage from \"../collection/collection.page\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  state = {\n    isLoading: true\n  };\n  unsubscribeFromSnap = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    // console.log(updateCollections, \"updateCollections\");\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async snaphot => {\n      const collectionMap = convertColletionToMap(snaphot);\n      // console.log(\"shop mount\", collectionMap);\n      updateCollections(collectionMap);\n      this.setState({ isLoading: false });\n    });\n  }\n  render() {\n    const { match } = this.props;\n    const { isLoading } = this.state;\n    return (\n      <div className=\"shop\">\n        <Route\n          exact\n          path={`${match.path}`}\n          render={props => (\n            <CollectionsOverviewWithSpinner isLoading={isLoading} {...props} />\n          )}\n          // component={CollectionsOverview}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={props => (\n            <CollectionPageWithSpinner isLoading={isLoading} {...props} />\n          )}\n          // component={CollectionPage}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchStateToProps = dispatch => ({\n  updateCollections: collectionMap =>\n    dispatch({ type: \"UPDATE_COLLECTIONS\", payload: collectionMap })\n});\n\nexport default connect(\n  null,\n  mapDispatchStateToProps\n)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}