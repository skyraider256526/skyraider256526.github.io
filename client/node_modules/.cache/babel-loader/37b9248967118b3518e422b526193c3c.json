{"ast":null,"code":"var _jsxFileName = \"/home/skyraider/Projects/React/trenders/src/components/sign-up/sign-up.jsx\";\nimport React, { Component } from \"react\";\nimport FormInput from \"../form-input/form-input\";\nimport CustomButton from \"../custom-button/custom-button\";\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport \"./sign-up.scss\";\n\nclass SignUp extends React {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            displayName = _this$state.displayName,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n\n      if (password !== confirmPassword) {\n        alert(\"Password don't match\");\n        return;\n      }\n\n      try {\n        const _ref = await auth.createUserWithEmailAndPassword(email, password),\n              user = _ref.user;\n\n        await createUserProfileDocument(user, {\n          displayName\n        });\n        this.setState({\n          displayName: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\"\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n    return React.createElement(\"div\", {\n      className: \"sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"I do not have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Sign up with email and password\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"type='text' name='displayName' value=\", displayName, \" onChange=\", this.handleChange, \" label='DisplayName' required>\"), React.createElement(FormInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"type='email' name='email' value=\", email, \" onChange=\", this.handleChange, \" label='Email' required>\"), React.createElement(FormInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"type='password' name='password' value=\", password, \" onChange=\", this.handleChange, \" label='Password' required>\"), React.createElement(FormInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"type='password' name='confirmPassword' value=\", confirmPassword, \"onChange=\", this.handleChange, \" label='Confirm Password' required>\"), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["/home/skyraider/Projects/React/trenders/src/components/sign-up/sign-up.jsx"],"names":["React","Component","FormInput","CustomButton","auth","createUserProfileDocument","SignUp","constructor","handleSubmit","event","preventDefault","state","displayName","email","password","confirmPassword","alert","createUserWithEmailAndPassword","user","setState","error","console","handleChange","target","name","value","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n\nimport FormInput from \"../form-input/form-input\";\nimport CustomButton from \"../custom-button/custom-button\";\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\n\nimport \"./sign-up.scss\";\n\nclass SignUp extends React {\n  constructor() {\n    super();\n\n    this.state = {\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    };\n  }\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    const { displayName, email, password, confirmPassword } = this.state;\n\n    if (password !== confirmPassword) {\n      alert(\"Password don't match\");\n      return;\n    }\n\n    try {\n      const { user } = await auth.createUserWithEmailAndPassword(\n        email,\n        password\n      );\n      await createUserProfileDocument(user, { displayName });\n      this.setState({\n        displayName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n  render() {\n    const { displayName, email, password, confirmPassword } = this.state;\n    return (\n      <div className=\"sign-up\">\n        <h2 className=\"title\">I do not have an account</h2>\n        <span>Sign up with email and password</span>\n        <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\n          <FormInput>\n            type='text' name='displayName' value={displayName} onChange=\n            {this.handleChange} label='DisplayName' required>\n          </FormInput>\n          <FormInput>\n            type='email' name='email' value={email} onChange=\n            {this.handleChange} label='Email' required>\n          </FormInput>\n          <FormInput>\n            type='password' name='password' value={password} onChange=\n            {this.handleChange} label='Password' required>\n          </FormInput>\n          <FormInput>\n            type='password' name='confirmPassword' value={confirmPassword}\n            onChange={this.handleChange} label='Confirm Password' required>\n          </FormInput>\n          <CustomButton type=\"submit\">SIGN UP</CustomButton>\n        </form>\n      </div>\n    );\n  }\n}\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}