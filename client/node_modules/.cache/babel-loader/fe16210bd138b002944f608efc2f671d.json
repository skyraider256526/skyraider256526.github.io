{"ast":null,"code":"var _jsxFileName = \"/home/skyraider/Projects/React/trenders/src/pages/shoppage/shop.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionFetching, selectIsCollectionLoading } from \"../../redux/shop/shop.selector\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner\";\nimport CollectionPage from \"../collection/collection.page\";\nimport CollectionsOverview from \"../../components/collection-overview/collection-overview\"; // import collectionOverview from \"../../components/collection-overview/collection-overview\";\n// import collectionPage from \"../collection/collection.page\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionFetching = _this$props.isCollectionFetching;\n    return React.createElement(\"div\", {\n      className: \"shop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })) // component={CollectionsOverview}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })) // component={CollectionPage}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = () => createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoading: selectIsCollectionLoading\n});\n\nconst mapDispatchStateToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchStateToProps)(ShopPage);","map":{"version":3,"sources":["/home/skyraider/Projects/React/trenders/src/pages/shoppage/shop.jsx"],"names":["React","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionLoading","WithSpinner","CollectionPage","CollectionsOverview","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","isCollectionLoading","mapDispatchStateToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SACEC,0BADF,EAEEC,yBAFF,QAGO,gCAHP;AAKA,OAAOC,WAAP,MAAwB,4CAAxB;AAEA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,mBAAP,MAAgC,0DAAhC,C,CACA;AACA;;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACE,mBAAD,CAAlD;AACA,MAAME,yBAAyB,GAAGJ,WAAW,CAACC,cAAD,CAA7C;;AAEA,MAAMI,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAAA,UACVV,0BADU,GACqB,KAAKW,KAD1B,CACVX,0BADU;AAElBA,IAAAA,0BAA0B;AAC3B;;AACDY,EAAAA,MAAM,GAAG;AAAA,wBACiC,KAAKD,KADtC;AAAA,UACCE,KADD,eACCA,KADD;AAAA,UACQC,oBADR,eACQA,oBADR;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAKD,KAAK,CAACE,IAAX,CAFN;AAGE,MAAA,MAAM,EAAEJ,KAAK,IACX,oBAAC,8BAAD;AACE,QAAA,SAAS,EAAEG;AADb,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ,CASE;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAYE,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKE,KAAK,CAACE,IAAX,mBADN;AAEE,MAAA,MAAM,EAAEJ,KAAK,IACX,oBAAC,yBAAD;AACE,QAAA,SAAS,EAAEG;AADb,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ,CAQE;AARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF;AAyBD;;AAhCoC;;AAmCvC,MAAMK,eAAe,GAAG,MACtBjB,wBAAwB,CAAC;AACvBe,EAAAA,oBAAoB,EAAEb,0BADC;AAEvBgB,EAAAA,mBAAmB,EAAEf;AAFE,CAAD,CAD1B;;AAMA,MAAMgB,uBAAuB,GAAGC,QAAQ,KAAK;AAC3CnB,EAAAA,0BAA0B,EAAE,MAAMmB,QAAQ,CAACnB,0BAA0B,EAA3B;AADC,CAAL,CAAxC;;AAIA,eAAeF,OAAO,CAACkB,eAAD,EAAkBE,uBAAlB,CAAP,CAAkDV,QAAlD,CAAf","sourcesContent":["import React from \"react\";\n\nimport { Route } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\n\nimport { createStructuredSelector } from \"reselect\";\n\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport {\n  selectIsCollectionFetching,\n  selectIsCollectionLoading\n} from \"../../redux/shop/shop.selector\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner\";\n\nimport CollectionPage from \"../collection/collection.page\";\nimport CollectionsOverview from \"../../components/collection-overview/collection-overview\";\n// import collectionOverview from \"../../components/collection-overview/collection-overview\";\n// import collectionPage from \"../collection/collection.page\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props;\n    fetchCollectionsStartAsync();\n  }\n  render() {\n    const { match, isCollectionFetching } = this.props;\n    return (\n      <div className=\"shop\">\n        <Route\n          exact\n          path={`${match.path}`}\n          render={props => (\n            <CollectionsOverviewWithSpinner\n              isLoading={isCollectionFetching}\n              {...props}\n            />\n          )}\n          // component={CollectionsOverview}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={props => (\n            <CollectionPageWithSpinner\n              isLoading={isCollectionFetching}\n              {...props}\n            />\n          )}\n          // component={CollectionPage}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = () =>\n  createStructuredSelector({\n    isCollectionFetching: selectIsCollectionFetching,\n    isCollectionLoading: selectIsCollectionLoading\n  });\n\nconst mapDispatchStateToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchStateToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}