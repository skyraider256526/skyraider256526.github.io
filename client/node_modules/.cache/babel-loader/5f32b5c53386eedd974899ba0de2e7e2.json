{"ast":null,"code":"import _defineProperty from \"/home/skyraider/Projects/React/trenders/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable no-unused-expressions */\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  // console.log(cartItems, cartItems.length);\n  // if (cartItems.length) {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id); //eslint disable nextline;\n\n  console.log(existingCartItem, \"is there repeation\");\n\n  if (existingCartItem) {\n    console.log(\"in the if\", JSON.parse(JSON.stringify(cartItems)));\n    cartItems.map(cartItem => console.log(\"after if\", JSON.parse(JSON.stringify(cartItem))));\n    const result = cartItems.map(cartItem => {\n      cartItem.id === cartItemToAdd.id ? _objectSpread({}, cartItem, {\n        quantity: cartItem.quantity++\n      }) : cartItem;\n    });\n    log;\n    return result; // }\n  }\n\n  console.log(\"out thw if\", JSON.parse(JSON.stringify(cartItems)));\n  return [...cartItems, _objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })];\n};","map":{"version":3,"sources":["/home/skyraider/Projects/React/trenders/src/redux/cart/cart.util.jsx"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","console","log","JSON","parse","stringify","map","result","quantity"],"mappings":";;;;;;AAAA;AACA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACzD;AACA;AACA,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACvBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADnB,CAAzB,CAHyD,CAMzD;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,gBAAZ,EAA8B,oBAA9B;;AACA,MAAIA,gBAAJ,EAAsB;AACpBI,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeV,SAAf,CAAX,CAAzB;AACAA,IAAAA,SAAS,CAACW,GAAV,CAAcP,QAAQ,IACpBE,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,QAAf,CAAX,CAAxB,CADF;AAGA,UAAMQ,MAAM,GAAGZ,SAAS,CAACW,GAAV,CAAcP,QAAQ,IAAI;AACvCA,MAAAA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,qBACSD,QADT;AACmBS,QAAAA,QAAQ,EAAET,QAAQ,CAACS,QAAT;AAD7B,WAEIT,QAFJ;AAGD,KAJc,CAAf;AAKAG,IAAAA,GAAG;AACH,WAAOK,MAAP,CAXoB,CAYpB;AACD;;AACDN,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeV,SAAf,CAAX,CAA1B;AAEA,SAAO,CAAC,GAAGA,SAAJ,oBAAoBC,aAApB;AAAmCY,IAAAA,QAAQ,EAAE;AAA7C,KAAP;AACD,CAzBM","sourcesContent":["/* eslint-disable no-unused-expressions */\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  // console.log(cartItems, cartItems.length);\n  // if (cartItems.length) {\n  const existingCartItem = cartItems.find(\n    cartItem => cartItem.id === cartItemToAdd.id\n  );\n  //eslint disable nextline;\n  console.log(existingCartItem, \"is there repeation\");\n  if (existingCartItem) {\n    console.log(\"in the if\", JSON.parse(JSON.stringify(cartItems)));\n    cartItems.map(cartItem =>\n      console.log(\"after if\", JSON.parse(JSON.stringify(cartItem)))\n    );\n    const result = cartItems.map(cartItem => {\n      cartItem.id === cartItemToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity++ }\n        : cartItem;\n    });\n    log\n    return result\n    // }\n  }\n  console.log(\"out thw if\", JSON.parse(JSON.stringify(cartItems)));\n\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n};\n"]},"metadata":{},"sourceType":"module"}