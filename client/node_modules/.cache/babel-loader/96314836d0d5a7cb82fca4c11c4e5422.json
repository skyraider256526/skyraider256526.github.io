{"ast":null,"code":"import _toConsumableArray from\"/home/skyraider/Projects/React/trenders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"/home/skyraider/Projects/React/trenders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/* eslint-disable no-unused-expressions */export var addItemToCart=function addItemToCart(cartItems,cartItemToAdd){// console.log(cartItems, cartItems.length);\n// if (cartItems.length) {\nvar existingCartItem=cartItems.find(function(cartItem){return cartItem.id===cartItemToAdd.id;});//eslint disable nextline;\nif(existingCartItem){cartItems.map(function(cartItem){return console.log(\"after if\",cartItem);});var result=cartItems.map(function(cartItem){return cartItem.id===cartItemToAdd.id?_objectSpread({},cartItem,{quantity:cartItem.quantity+1}):cartItem;});// console.log(result);\nreturn result;}return[].concat(_toConsumableArray(cartItems),[_objectSpread({},cartItemToAdd,{quantity:1})]);};export var removeItemFromCart=function removeItemFromCart(cartItems,cartItemToRemove){var existingCartItem=cartItems.find(function(cartItem){return cartItem.id===cartItemToRemove.id;});if(existingCartItem.quantity===1){return cartItems.filter(function(cartItem){return cartItem.id!==cartItemToRemove.id;});}else{return cartItems.map(function(cartItem){return cartItem.id===cartItemToRemove.id?_objectSpread({},cartItem,{quantity:cartItem.quantity-1}):cartItem;});}};","map":{"version":3,"sources":["/home/skyraider/Projects/React/trenders/src/redux/cart/cart.util.jsx"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","console","log","result","quantity","removeItemFromCart","cartItemToRemove","filter"],"mappings":"klCAAA,0CACA,MAAO,IAAMA,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,SAAD,CAAYC,aAAZ,CAA8B,CACzD;AACA;AACA,GAAMC,CAAAA,gBAAgB,CAAGF,SAAS,CAACG,IAAV,CACvB,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,EAAT,GAAgBJ,aAAa,CAACI,EAAlC,EADe,CAAzB,CAGA;AACA,GAAIH,gBAAJ,CAAsB,CACpBF,SAAS,CAACM,GAAV,CAAc,SAAAF,QAAQ,QAAIG,CAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBJ,QAAxB,CAAJ,EAAtB,EACA,GAAMK,CAAAA,MAAM,CAAGT,SAAS,CAACM,GAAV,CAAc,SAAAF,QAAQ,QACnCA,CAAAA,QAAQ,CAACC,EAAT,GAAgBJ,aAAa,CAACI,EAA9B,kBACSD,QADT,EACmBM,QAAQ,CAAEN,QAAQ,CAACM,QAAT,CAAoB,CADjD,GAEIN,QAH+B,EAAtB,CAAf,CAKA;AAEA,MAAOK,CAAAA,MAAP,CACD,CAED,mCAAWT,SAAX,oBAA2BC,aAA3B,EAA0CS,QAAQ,CAAE,CAApD,KACD,CApBM,CAsBP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACX,SAAD,CAAYY,gBAAZ,CAAiC,CACjE,GAAMV,CAAAA,gBAAgB,CAAGF,SAAS,CAACG,IAAV,CACvB,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,EAAT,GAAgBO,gBAAgB,CAACP,EAArC,EADe,CAAzB,CAIA,GAAIH,gBAAgB,CAACQ,QAAjB,GAA8B,CAAlC,CAAqC,CACnC,MAAOV,CAAAA,SAAS,CAACa,MAAV,CAAiB,SAAAT,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,EAAT,GAAgBO,gBAAgB,CAACP,EAArC,EAAzB,CAAP,CACD,CAFD,IAEO,CACL,MAAOL,CAAAA,SAAS,CAACM,GAAV,CAAc,SAAAF,QAAQ,QAC3BA,CAAAA,QAAQ,CAACC,EAAT,GAAgBO,gBAAgB,CAACP,EAAjC,kBACSD,QADT,EACmBM,QAAQ,CAAEN,QAAQ,CAACM,QAAT,CAAoB,CADjD,GAEIN,QAHuB,EAAtB,CAAP,CAKD,CACF,CAdM","sourcesContent":["/* eslint-disable no-unused-expressions */\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  // console.log(cartItems, cartItems.length);\n  // if (cartItems.length) {\n  const existingCartItem = cartItems.find(\n    cartItem => cartItem.id === cartItemToAdd.id\n  );\n  //eslint disable nextline;\n  if (existingCartItem) {\n    cartItems.map(cartItem => console.log(\"after if\", cartItem));\n    const result = cartItems.map(cartItem =>\n      cartItem.id === cartItemToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n    // console.log(result);\n\n    return result;\n  }\n\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n};\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(\n    cartItem => cartItem.id === cartItemToRemove.id\n  );\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  } else {\n    return cartItems.map(cartItem =>\n      cartItem.id === cartItemToRemove.id\n        ? { ...cartItem, quantity: cartItem.quantity - 1 }\n        : cartItem\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}