{"ast":null,"code":"import _defineProperty from \"/home/skyraider/Projects/React/trenders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { SignInSuccess, SignInFailure, signOutFailure, signOutStart, signOutSuccess, signUpStart, signUpSuccess, signUpFailure } from \"./user.actions\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\"; //Drivers\n\nexport function* emailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* googleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.signUpStart, SignUpStarted);\n} // functions\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* SignUpStarted({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield createUserProfileDocument(user, {\n      displayName\n    });\n    yield console.info(\"account created by sign up with email and password\");\n    yield put(signUpSuccess());\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n\n    if (!userAuth) {\n      return;\n    }\n\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    put(SignInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    put(signOutFailure(error));\n  }\n}\nexport function* userSagas() {\n  yield all([call(googleSignInStart), call(emailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["/home/skyraider/Projects/React/trenders/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","SignInSuccess","SignInFailure","signOutFailure","signOutStart","signOutSuccess","signUpStart","signUpSuccess","signUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","emailSignInStart","EMAIL_SIGN_IN_START","signInWithEmail","onCheckUserSession","CHECK_USER_SESSION","isUserAuthenticated","googleSignInStart","GOOGLE_SIGN_IN_START","signInWithGoogle","onSignOutStart","SIGN_OUT_START","signOut","onSignUpStart","SignUpStarted","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithPopup","user","payload","email","password","signInWithEmailAndPassword","displayName","createUserWithEmailAndPassword","console","info","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"./user.types\";\n\nimport {\n  SignInSuccess,\n  SignInFailure,\n  signOutFailure,\n  signOutStart,\n  signOutSuccess,\n  signUpStart,\n  signUpSuccess,\n  signUpFailure\n} from \"./user.actions\";\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser\n} from \"../../firebase/firebase.utils\";\n\n//Drivers\nexport function* emailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* googleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.signUpStart, SignUpStarted);\n}\n\n// functions\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* SignUpStarted({ payload: { email, password, displayName } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield createUserProfileDocument(user, { displayName });\n    yield console.info(\"account created by sign up with email and password\");\n    yield put(signUpSuccess());\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) {\n      return;\n    }\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    put(SignInFailure(error));\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    put(signOutFailure(error));\n  }\n}\n\nexport function* userSagas() {\n  yield all([\n    call(googleSignInStart),\n    call(emailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart)\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}