{"ast":null,"code":"import _defineProperty from \"/home/skyraider/Projects/React/trenders/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nconst config = {\n  apiKey: \"AIzaSyAcNdd24SpGcmdPoInGXJOxCp0cMw4ni7g\",\n  authDomain: \"crwn-dbs-4e99e.firebaseapp.com\",\n  databaseURL: \"https://crwn-dbs-4e99e.firebaseio.com\",\n  projectId: \"crwn-dbs-4e99e\",\n  storageBucket: \"\",\n  messagingSenderId: \"532871368869\",\n  appId: \"1:532871368869:web:3b061b124e4ecc77f9fd4c\"\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return; //for when looging out not display  null in console\n\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.error(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const convertColletionToMap = collection => {\n  const transformedColletcion = collection.docs.map(doc => {\n    const _doc$data = doc.data(),\n          title = _doc$data.title,\n          items = _doc$data.items;\n  });\n};\nexport default firebase;","map":{"version":3,"sources":["/home/skyraider/Projects/React/trenders/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","createUserProfileDocument","userAuth","additionalData","userRef","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","message","convertColletionToMap","collection","transformedColletcion","docs","map","data","title","items"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,gCAFC;AAGbC,EAAAA,WAAW,EAAE,uCAHA;AAIbC,EAAAA,SAAS,EAAE,gBAJE;AAKbC,EAAAA,aAAa,EAAE,EALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE;AAPM,CAAf;AAUAR,QAAQ,CAACS,aAAT,CAAuBR,MAAvB;AAEA,OAAO,MAAMS,IAAI,GAAGV,QAAQ,CAACU,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGX,QAAQ,CAACW,SAAT,EAAlB;AAEP,MAAMC,QAAQ,GAAG,IAAIZ,QAAQ,CAACU,IAAT,CAAcG,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAMN,IAAI,CAACO,eAAL,CAAqBL,QAArB,CAA/B;AAEP,OAAO,MAAMM,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe,OAD4D,CACpD;;AACvB,QAAME,OAAO,GAAGV,SAAS,CAACW,GAAV,iBAAuBH,QAAQ,CAACI,GAAhC,EAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAAA,UACZC,WADY,GACWR,QADX,CACZQ,WADY;AAAA,UACCC,KADD,GACWT,QADX,CACCS,KADD;AAEpB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMT,OAAO,CAACU,GAAR;AACJJ,QAAAA,WADI;AAEJC,QAAAA,KAFI;AAGJC,QAAAA;AAHI,SAIDT,cAJC,EAAN;AAMD,KAPD,CAOE,OAAOY,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,qBAAd,EAAqCA,KAAK,CAACE,OAA3C;AACD;AACF;;AAED,SAAOb,OAAP;AACD,CAtBM;AAwBP,OAAO,MAAMc,qBAAqB,GAAGC,UAAU,IAAI;AACjD,QAAMC,qBAAqB,GAAGD,UAAU,CAACE,IAAX,CAAgBC,GAAhB,CAAoBjB,GAAG,IAAI;AAAA,sBAC9BA,GAAG,CAACkB,IAAJ,EAD8B;AAAA,UAC/CC,KAD+C,aAC/CA,KAD+C;AAAA,UACxCC,KADwC,aACxCA,KADwC;AAExD,GAF6B,CAA9B;AAGD,CAJM;AAMP,eAAe1C,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst config = {\n  apiKey: \"AIzaSyAcNdd24SpGcmdPoInGXJOxCp0cMw4ni7g\",\n  authDomain: \"crwn-dbs-4e99e.firebaseapp.com\",\n  databaseURL: \"https://crwn-dbs-4e99e.firebaseio.com\",\n  projectId: \"crwn-dbs-4e99e\",\n  storageBucket: \"\",\n  messagingSenderId: \"532871368869\",\n  appId: \"1:532871368869:web:3b061b124e4ecc77f9fd4c\"\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return; //for when looging out not display  null in console\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.error(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport const convertColletionToMap = collection => {\n  const transformedColletcion = collection.docs.map(doc => {\n    const { title, items } = doc.data();\n  });\n};\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}