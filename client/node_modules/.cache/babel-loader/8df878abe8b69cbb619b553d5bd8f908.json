{"ast":null,"code":"import ShopActionTypes from \"./shops.types\";\nimport { firestore, convertColletionToMap } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = colletionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: colletionMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FALIURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snaphot => {\n      const collectionMap = convertColletionToMap(snaphot); // console.log(\"shop mount\", collectionMap);\n\n      dispatch(fetchCollectionsSuccess(collectionMap));\n      this.setState({\n        isLoading: false\n      });\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/home/skyraider/Projects/React/trenders/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertColletionToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","colletionMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FALIURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snaphot","collectionMap","setState","isLoading","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,eAA5B;AAEA,SACEC,SADF,EAEEC,qBAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,YAAY,KAAK;AACtDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADgC;AAEtDC,EAAAA,OAAO,EAAEF;AAF6C,CAAL,CAA5C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACtDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADgC;AAEtDH,EAAAA,OAAO,EAAEE;AAF6C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AACAY,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQC,OAAO,IAAI;AACf,YAAMC,aAAa,GAAGlB,qBAAqB,CAACiB,OAAD,CAA3C,CADe,CAEf;;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACc,aAAD,CAAxB,CAAR;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAPH,EAQGC,KARH,CAQSC,KAAK,IAAIV,QAAQ,CAACJ,uBAAuB,CAACc,KAAK,CAACC,OAAP,CAAxB,CAR1B;AASD,GAZD;AAaD,CAdM","sourcesContent":["import ShopActionTypes from \"./shops.types\";\n\nimport {\n  firestore,\n  convertColletionToMap\n} from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsSuccess = colletionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: colletionMap\n});\n\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FALIURE,\n  payload: errorMessage\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef\n      .get()\n      .then(snaphot => {\n        const collectionMap = convertColletionToMap(snaphot);\n        // console.log(\"shop mount\", collectionMap);\n        dispatch(fetchCollectionsSuccess(collectionMap));\n        this.setState({ isLoading: false });\n      })\n      .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}