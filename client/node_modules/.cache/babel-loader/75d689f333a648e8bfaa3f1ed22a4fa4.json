{"ast":null,"code":"var _jsxFileName = \"/home/skyraider/Projects/React/trenders/src/pages/shoppage/shop.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionFetching, selectIsCollectionLoading } from \"../../redux/shop/shop.selector\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner\";\nimport CollectionPage from \"../collection/collection.page\";\nimport CollectionsOverviewContainer from \"../../components/collection-overview/collections-overview.container\"; // const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionFetching = _this$props.isCollectionFetching,\n          isCollectionLoading = _this$props.isCollectionLoading;\n    return React.createElement(\"div\", {\n      className: \"shop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path) // render={props => (\n      //   <CollectionsOverviewWithSpinner\n      //     isLoading={isCollectionFetching}\n      //     {...props}\n      //   />\n      // )}\n      ,\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionLoading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })) // component={CollectionPage}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = () => createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoading: selectIsCollectionLoading\n});\n\nconst mapDispatchStateToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchStateToProps)(ShopPage);","map":{"version":3,"sources":["/home/skyraider/Projects/React/trenders/src/pages/shoppage/shop.jsx"],"names":["React","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionLoading","WithSpinner","CollectionPage","CollectionsOverviewContainer","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","isCollectionLoading","path","mapStateToProps","mapDispatchStateToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SACEC,0BADF,EAEEC,yBAFF,QAGO,gCAHP;AAKA,OAAOC,WAAP,MAAwB,4CAAxB;AAEA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,4BAAP,MAAyC,qEAAzC,C,CAEA;;AACA,MAAMC,yBAAyB,GAAGH,WAAW,CAACC,cAAD,CAA7C;;AAEA,MAAMG,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAAA,UACVT,0BADU,GACqB,KAAKU,KAD1B,CACVV,0BADU;AAElBA,IAAAA,0BAA0B;AAC3B;;AACDW,EAAAA,MAAM,GAAG;AAAA,wBACsD,KAAKD,KAD3D;AAAA,UACCE,KADD,eACCA,KADD;AAAA,UACQC,oBADR,eACQA,oBADR;AAAA,UAC8BC,mBAD9B,eAC8BA,mBAD9B;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAKF,KAAK,CAACG,IAAX,CAFN,CAGE;AACA;AACA;AACA;AACA;AACA;AARF;AASE,MAAA,SAAS,EAAEV,4BATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAYE,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKO,KAAK,CAACG,IAAX,mBADN;AAEE,MAAA,MAAM,EAAEL,KAAK,IACX,oBAAC,yBAAD;AACE,QAAA,SAAS,EAAE,CAACI;AADd,SAEMJ,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ,CAQE;AARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF;AAyBD;;AAhCoC;;AAmCvC,MAAMM,eAAe,GAAG,MACtBjB,wBAAwB,CAAC;AACvBc,EAAAA,oBAAoB,EAAEZ,0BADC;AAEvBa,EAAAA,mBAAmB,EAAEZ;AAFE,CAAD,CAD1B;;AAMA,MAAMe,uBAAuB,GAAGC,QAAQ,KAAK;AAC3ClB,EAAAA,0BAA0B,EAAE,MAAMkB,QAAQ,CAAClB,0BAA0B,EAA3B;AADC,CAAL,CAAxC;;AAIA,eAAeF,OAAO,CAACkB,eAAD,EAAkBC,uBAAlB,CAAP,CAAkDV,QAAlD,CAAf","sourcesContent":["import React from \"react\";\n\nimport { Route } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\n\nimport { createStructuredSelector } from \"reselect\";\n\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport {\n  selectIsCollectionFetching,\n  selectIsCollectionLoading\n} from \"../../redux/shop/shop.selector\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner\";\n\nimport CollectionPage from \"../collection/collection.page\";\nimport CollectionsOverviewContainer from \"../../components/collection-overview/collections-overview.container\";\n\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props;\n    fetchCollectionsStartAsync();\n  }\n  render() {\n    const { match, isCollectionFetching, isCollectionLoading } = this.props;\n    return (\n      <div className=\"shop\">\n        <Route\n          exact\n          path={`${match.path}`}\n          // render={props => (\n          //   <CollectionsOverviewWithSpinner\n          //     isLoading={isCollectionFetching}\n          //     {...props}\n          //   />\n          // )}\n          component={CollectionsOverviewContainer}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={props => (\n            <CollectionPageWithSpinner\n              isLoading={!isCollectionLoading}\n              {...props}\n            />\n          )}\n          // component={CollectionPage}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = () =>\n  createStructuredSelector({\n    isCollectionFetching: selectIsCollectionFetching,\n    isCollectionLoading: selectIsCollectionLoading\n  });\n\nconst mapDispatchStateToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchStateToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}